package ch.bbw.em;import java.util.Random;/** * Class Game - the main class of the "Zork" game. * <p> * Author:  Michael Kolling * Version: 1.1 * Date:    March 2000 * <p> * This class is the main class of the "Zork" application. Zork is a very * simple, text based adventure game.  Users can walk around some scenery. * That's all. It should really be extended to make it more interesting! * <p> * To play this game, create an instance of this class and call the "play" * routine. * <p> * This main class creates and initialises all the others: it creates all * rooms, creates the parser and starts the game.  It also evaluates the * commands that the parser returns. */public class Game {    Random random = new Random();    private Parser parser;    private Room currentRoom;    Room[] map;    Item key, calculator, potion;    private String back;    private Entity player, boss;    private final String[] MAP = {            "                                                         NORTH" + "\n" +                    "      \u001B[31m+-----------------+\u001B[0m          +-----------------+          +-----------------+" + "\n" +                    "      \u001B[31m|                 |\u001B[0m          |                 |          |                 |" + "\n" +                    "      \u001B[31m|   Underworld    |\u001B[0m----------|      Ruins      |----------|       Lab       |" + "\n" +                    "      \u001B[31m|                 |\u001B[0m          |                 |          |                 |" + "\n" +                    "      \u001B[31m+-----------------+\u001B[0m          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |          |   Veselcic's    |" + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          |                 |          |                 |          |  (final boss)   |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |     outside     |----------|      Swamp      |----------|       Hut       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          \u001B[31m+-----------------+\u001B[0m          +-----------------+" + "\n" +                    "       |                 |          \u001B[31m|                 |\u001B[0m          |                 |" + "\n" +                    "       |   Underworld    |----------\u001B[31m|      Ruins      |\u001B[0m----------|       Lab       |" + "\n" +                    "       |                 |          \u001B[31m|                 |\u001B[0m          |                 |" + "\n" +                    "       +-----------------+          \u001B[31m+-----------------+\u001B[0m          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |          |   Veselcic's    |" + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          |                 |          |                 |          |  (final boss)   |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |     outside     |----------|      Swamp      |----------|       Hut       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          +-----------------+          \u001B[31m+-----------------+\u001B[0m" + "\n" +                    "       |                 |          |                 |          \u001B[31m|                 |\u001B[0m" + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------\u001B[31m|       Lab       |\u001B[0m" + "\n" +                    "       |                 |          |                 |          \u001B[31m|                 |\u001B[0m" + "\n" +                    "       +-----------------+          +-----------------+          \u001B[31m+-----------------+\u001B[0m" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |          |   Veselcic's    |" + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          |                 |          |                 |          |  (final boss)   |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |     outside     |----------|      Swamp      |----------|       Hut       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------|       Lab       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       \u001B[31m+-----------------+\u001B[0m          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       \u001B[31m|                 |\u001B[0m          |                 |          |                 |          |   Veselcic's    |" + "\n" +                    "WEST   \u001B[31m|    Iceworld     |\u001B[0m----------|     Tavern      |----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       \u001B[31m|                 |\u001B[0m          |                 |          |                 |          |  (final boss)   |" + "\n" +                    "       \u001B[31m+-----------------+\u001B[0m          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |     outside     |----------|      Swamp      |----------|       Hut       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------|       Lab       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          \u001B[31m+-----------------+\u001B[0m          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          \u001B[31m|                 |\u001B[0m          |                 |          |   Veselcic's    |" + "\n" +                    "WEST   |    Iceworld     |----------\u001B[31m|     Tavern      |\u001B[0m----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          \u001B[31m|                 |\u001B[0m          |                 |          |  (final boss)   |" + "\n" +                    "       +-----------------+          \u001B[31m+-----------------+\u001B[0m          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |     outside     |----------|      Swamp      |----------|       Hut       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------|       Lab       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          \u001B[31m+-----------------+\u001B[0m          +-----------------+" + "\n" +                    "       |                 |          |                 |          \u001B[31m|                 |\u001B[0m          |   Veselcic's    |" + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------\u001B[31m|     Desert      |\u001B[0m----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          |                 |          \u001B[31m|                 |\u001B[0m          |  (final boss)   |" + "\n" +                    "       +-----------------+          +-----------------+          \u001B[31m+-----------------+\u001B[0m          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |     outside     |----------|      Swamp      |----------|       Hut       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------|       Lab       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |          |   Veselcic's    |" + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          |                 |          |                 |          |  (final boss)   |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       \u001B[31m+-----------------+\u001B[0m          +-----------------+          +-----------------+" + "\n" +                    "       \u001B[31m|                 |\u001B[0m          |                 |          |                 |" + "\n" +                    "       \u001B[31m|     outside     |\u001B[0m----------|      Swamp      |----------|       Hut       |" + "\n" +                    "       \u001B[31m|                 |\u001B[0m          |                 |          |                 |" + "\n" +                    "       \u001B[31m+-----------------+\u001B[0m          +-----------------+          +-----------------+" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------|       Lab       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |          |   Veselcic's    |" + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          |                 |          |                 |          |  (final boss)   |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          \u001B[31m+-----------------+\u001B[0m          +-----------------+" + "\n" +                    "       |                 |          \u001B[31m|                 |\u001B[0m          |                 |" + "\n" +                    "       |     outside     |----------\u001B[31m|      Swamp      |\u001B[0m----------|       Hut       |" + "\n" +                    "       |                 |          \u001B[31m|                 |\u001B[0m          |                 |" + "\n" +                    "       +-----------------+          \u001B[31m+-----------------+\u001B[0m          +-----------------+" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------|       Lab       |" + "\n" +                    "       |                 |          |                 |          |                 |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "       |                 |          |                 |          |                 |          |   Veselcic's    |" + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          |                 |          |                 |          |  (final boss)   |" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "                |                            |                            |" + "\n" +                    "       +-----------------+          +-----------------+          \u001B[31m+-----------------+\u001B[0m" + "\n" +                    "       |                 |          |                 |          \u001B[31m|                 |\u001B[0m" + "\n" +                    "       |     outside     |----------|      Swamp      |----------\u001B[31m|       Hut       |\u001B[0m" + "\n" +                    "       |                 |          |                 |          \u001B[31m|                 |\u001B[0m" + "\n" +                    "       +-----------------+          +-----------------+          \u001B[31m+-----------------+\u001B[0m" + "\n" +                    "                                                         SOUTH"            ,            "                                                         NORTH" + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+                                    " + "\n" +                    "       |                 |          |                 |          |                 |                                    " + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------|       Lab       |                                    " + "\n" +                    "       |                 |          |                 |          |                 |                                    " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+                                    " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          \u001B[31m+-----------------+\u001B[0m       " + "\n" +                    "       |                 |          |                 |          |                 |          \u001B[31m|   Veselcic's    |\u001B[0m       " + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------|     Desert      |----------\u001B[31m|     Mansion     |\u001B[0m   EAST" + "\n" +                    "       |                 |          |                 |          |                 |          \u001B[31m|  (final boss)   |\u001B[0m       " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          \u001B[31m+-----------------+\u001B[0m       " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+                                    " + "\n" +                    "       |                 |          |                 |          |                 |                                    " + "\n" +                    "       |     outside     |----------|      Swamp      |----------|       Hut       |                                    " + "\n" +                    "       |                 |          |                 |          |                 |                                    " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+                                    " + "\n" +                    "                                                         SOUTH                                                          "            ,            "                                                         NORTH                                                           " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+                                    " + "\n" +                    "       |                 |          |                 |          |                 |                                    " + "\n" +                    "       |   Underworld    |----------|      Ruins      |----------|       Lab       |                                    " + "\n" +                    "       |                 |          |                 |          |                 |                                    " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+                                    " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+       " + "\n" +                    "       |                 |          |                 |          |                 |          |   Veselcic's    |       " + "\n" +                    "WEST   |    Iceworld     |----------|     Tavern      |----------|     Desert      |----------|     Mansion     |   EAST" + "\n" +                    "       |                 |          |                 |          |                 |          |  (final boss)   |       " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+          +-----------------+       " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "                |                            |                            |                                             " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+                                    " + "\n" +                    "       |                 |          |                 |          |                 |                                    " + "\n" +                    "       |     outside     |----------|      Swamp      |----------|       Hut       |                                    " + "\n" +                    "       |                 |          |                 |          |                 |                                    " + "\n" +                    "       +-----------------+          +-----------------+          +-----------------+                                    " + "\n" +                    "                                                         SOUTH                                                          "    };    /**     * Create the game and initialise its internal map.     */    public Game() {        init();        parser = new Parser();    }    /**     * Create all the rooms and link their exits together.     */    private void init() {        this.player = new Entity("Hero", 3, currentRoom);        Room outside, lab, tavern, swamp, hut, bossRoom, underworld, ruins, desert, iceworld;        //Items        Item charm, curse, bag, ring;        charm = new Item("charm", "A charm with a powerful vibe (50% damage increase)", 10, true);        key = new Item("key", "A key", 5, false);        ring = new Item("ring", "A ring with a powerful vibe (50% damage increase)", 7, true);        potion = new Item("potion", "A red potion with the power to heal people (heals 100% of your health)", 5, false);        calculator = new Item("calculator", "It can calculate stuff (might come in handy)", 5, false);        Item[] distribution = {charm, ring, potion, null, potion};        // Entities        Entity blaze, golem, mutant, icegolem, drunk, thief, shrek, farmer;        blaze = new Entity("Blaze", 34);        golem = new Entity("Golem", 28);        mutant = new Entity("Mutant", 17);        icegolem = new Entity("Ice-Golem", 42);        drunk = new Entity("A drunk guy", 7);        thief = new Entity("thief", 14);        shrek = new Entity("Shrek", 100);        farmer = new Entity("Farmer", 2);        // create the rooms        outside = new Room("a lot of grass", distribution[random.nextInt(distribution.length)], null, "outside");        lab = new Room("a lot of chemicals", distribution[random.nextInt(distribution.length)], mutant, "lab");        tavern = new Room("a lot of Alcohol", distribution[random.nextInt(distribution.length)], drunk, "tavern");        swamp = new Room("Shrek's swamp", distribution[random.nextInt(distribution.length)], shrek, "swamp");        hut = new Room("a small hut", distribution[random.nextInt(distribution.length)], farmer, "hut");        underworld = new Room("a lot of fire", distribution[random.nextInt(distribution.length)], blaze, "underworld");        ruins = new Room("a lot of ruins", distribution[random.nextInt(distribution.length)], golem, "ruins");        desert = new Room("a lot of sand", distribution[random.nextInt(distribution.length)], thief, "desert");        iceworld = new Room("a lot of ice", distribution[random.nextInt(distribution.length)], icegolem, "iceworld");        bossRoom = new Room("Veselcic's mansion", null, null, "Hell");        bossRoom.setExits(null, null, null, null);        // initialise room exits        underworld.setExits(null, ruins, iceworld, null);        ruins.setExits(null, lab, tavern, underworld);        lab.setExits(null, null, desert, ruins);        iceworld.setExits(underworld, tavern, outside, null);        tavern.setExits(ruins, desert, swamp, iceworld);        desert.setExits(lab, bossRoom, hut, tavern);        outside.setExits(iceworld, swamp, null, null);        swamp.setExits(tavern, hut, null, outside);        hut.setExits(desert, null, null, swamp);        map = new Room[]{underworld, ruins, lab, iceworld, tavern, desert, outside, swamp, hut, bossRoom};        map[random.nextInt(9)].setItem(key);        boolean calc = false;        while (!calc) {            int calcPos = random.nextInt(9);            if (map[calcPos].getItem() != key) {                map[calcPos].setItem(calculator);            }            for (Room room : map) {                if (room.getItem() == calculator) {                    calc = true;                    break;                }            }        }        this.currentRoom = map[random.nextInt(9)]; // start game in a random room        this.boss = new Entity("Veselcic", 20, bossRoom);    }    /**     * Main play routine. Loops until end of play.     */    public void play() throws InterruptedException {        printWelcome();        // Enter the main command loop. Here we repeatedly read commands and        // execute them until the game is over.        boolean finished = false;        while (!finished) {            if (boss.getHealth() < 0.5) {                finished = true;                System.out.println("Congrats! You beat Veselcic");                continue;            }            Command command = parser.getCommand();            finished = processCommand(command);        }        System.out.println("Thank you for playing " + player.getName() + ". See you next time.");    }    /**     * Print out the opening message for the player.     */    private void printWelcome() {        System.out.println();        System.out.println("Hello " + player.getName() + "!");        System.out.println("Welcome to Zork!");        System.out.println("Pssst... You start at lvl 3 because you are the Hero ;)");        System.out.println("Zork is a simple adventure game.");        System.out.println("Type 'help' if you need help.");        System.out.println(currentRoom.longDescription());    }    /**     * Given a command, process (that is: execute) the command.     * If this command ends the game, true is returned, otherwise false is     * returned.     */    private boolean processCommand(Command command) throws InterruptedException {        if (command.isUnknown()) {            System.out.println("I don't know what you mean...");            return false;        }        String commandWord = command.getCommandWord();        switch (commandWord) {            case "help":                printHelp();                break;            case "stats":                player.printStats();                break;            case "go":                goRoom(command);                break;            case "quit":                if (command.hasSecondWord()) {                    System.out.println("Quit what?");                } else {                    return true; // signal that we want to quit                }                break;            case "map":                switch (currentRoom.getName()) {                    case "underworld" -> System.out.println(MAP[0]);                    case "ruins" -> System.out.println(MAP[1]);                    case "lab" -> System.out.println(MAP[2]);                    case "iceworld" -> System.out.println(MAP[3]);                    case "tavern" -> System.out.println(MAP[4]);                    case "desert" -> System.out.println(MAP[5]);                    case "outside" -> System.out.println(MAP[6]);                    case "swamp" -> System.out.println(MAP[7]);                    case "hut" -> System.out.println(MAP[8]);                    case "Hell" -> System.out.println(MAP[9]);                    default -> System.out.println(MAP[10]);                }                for (Room room : map) {                    if (room.getItem() != null) {                        System.out.println(room.getName() + "\n\tItem: " + room.getItem().getName());                    } else {                        System.out.println(room.getName() + "\n\tItem: None");                    }                    if (room.getName().equals("Hell")) {                        System.out.println("\tMob: unknown...");                    } else {                        if (room.getMob() != null) {                            System.out.println("\tMob: " + room.getMob().getName() + " Level: " + room.getMob().getLvl());                        } else {                            System.out.println("\tMob: None");                        }                    }                }                break;            case "bag":                System.out.println("Capacity: " + player.getCurrentCapacity() + "/" + player.getCapacity());                player.printItems();                break;            case "back":                if (back == null) {                    System.out.println("You haven't been anywhere yet!");                } else {                    currentRoom = currentRoom.nextRoom(back);                    System.out.println(currentRoom.longDescription());                }                break;            case "fight":                if (currentRoom.getMob() == null) {                    System.out.println("There is no one to fight");                } else {                    fight(player, currentRoom.getMob());                }                break;            case "collect":                if (currentRoom.getItem() != null) {                    if (player.getCurrentCapacity() + currentRoom.getItem().getWeight() > player.getCapacity()) {                        System.out.println("It's too heavy");                    } else {                        player.pickUpItem(currentRoom.getItem());                        currentRoom.setItem(null);                    }                } else {                    System.out.println("Here is no item");                }                break;            case "attack":                System.out.println("You have to start the fight first by typing \"fight\"");                break;            case "heal":                heal();                break;            case "run":                System.out.println("You aren't fighting");                break;            case "dispose":                String useless = command.getSecondWord();                if (useless.equals("") || useless == null) {                    System.out.println("dispose what?");                }                boolean exist = false;                for (Item item : player.getBag()) {                    if (item.getName().equals(useless)) {                        player.disposeItem(item);                        System.out.println("You got rid of " + item.getName());                        exist = true;                        break;                    }                }                if (!exist) {                    System.out.println("You don't have a \"" + useless + "\" to dispose");                }                break;            default:                System.out.println("I don't know what you mean...");                return false;        }        return false;    }    private void printHelp() {        System.out.println("You are lost. You are alone. You wander");        System.out.println("around at " + currentRoom.shortDescription());        System.out.println();        System.out.println("Your command words are:");        System.out.println(parser.showCommands());        System.out.println(currentRoom.longDescription());    }    private void goRoom(Command command) throws InterruptedException {        // if there is no second word, we don't know where to go...        if (!command.hasSecondWord()) {            System.out.println("Go where?");        } else {            String direction = command.getSecondWord();            switch (direction) {                case "north" -> back = "south";                case "east" -> back = "west";                case "south" -> back = "north";                case "west" -> back = "east";            }            // Try to leave current room.            Room nextRoom = currentRoom.nextRoom(direction);            if (nextRoom == null) {                System.out.println("You've reached the end");            } else if (nextRoom == boss.getLocation()) {                if (player.getBag().contains(key)) {                    currentRoom = nextRoom;                    player.setLocation(currentRoom);                    System.out.println(currentRoom.longDescription());                    fight(player, boss);                } else {                    System.out.println("You don't have a key to enter this room");                }            } else {                currentRoom = nextRoom;                player.setLocation(currentRoom);                System.out.println(currentRoom.longDescription());            }        }    }    private void fight(Entity player, Entity mob) throws InterruptedException {        System.out.println("Started fighting against " + mob.getName());        if (mob == boss) {            System.out.println("\u001B[47m\u001B[30mKneife deine Augen zusammen!\u001B[0m");            Thread.sleep(2000);            System.out.println("\n \u001B[40m\u001B[31m" +                    "                                                ..\n" +                    "                                             ``.:s:.+:-.\n" +                    "                                         `-:/syhhhddmdyo+/.\n" +                    "                                      ./++oyhdmNNNNNNMNhsoys/.`\n" +                    "                                  `-+sdmNmmmmNNmddddmNNNNhyyyo+/:`\n" +                    "                                ./ydNNmmdhsso+//::/+osssssyshdyyyy+`\n" +                    "                              ./+ydmmhs+//:::---....--://///+oyddmNy.\n" +                    "                             -oosmdy+/::::---...........---::::/shddh.\n" +                    "                            -osydds+/:::::---..............-::::-/hdho\n" +                    "                           .+shddyo//:::::----.............---::::+hdd:\n" +                    "                           :oyhhhs+////::-----...............---::/yddy`\n" +                    "                          `/ssyyys++/+/::----..............--:-::::shhh:\n" +                    "                          `/oossys++///::///+oo+/:--..---/oyyysoo+/ohhy/\n" +                    "                           /osyyyo///+++oo+++ossso+/-.-:+ooso++++oo/hhy/\n" +                    "                           :oyyhyo///+oo+o+++osssso+-..:ssssshhoss+:ody/       _____________________\n" +                    "                           :yhhhh+/::/+oyys+hdy+o++/:..-/++:+sy+o++::hy-      /                    /\n" +                    "                           +yhddh+:::/+oooo+++//::::-.`.-:::/+++//:--oy.     /    Muhahahahaha!   /\n" +                    "                          `+ssshh+://::-:::::::---::-..`.-::--------:/o`    /                    /\n" +                    "                          `/+/+ss/////:----.....-::::-.`.--::---.--::::`   /____________________/\n" +                    "                           //:+++//////:-.....-:/+:://:--:///++:::::::-`     /_/\n" +                    "                           -////////////:----://:+ooooooooso/:/+++++/:-.    /\n" +                    "                           `//://+/////++/////:-:+oo+/+++++/:://++o+/--`   /\n" +                    "                            .:::://///+++++//////////////////+o+++o+-.`\n" +                    "                            `/+//+o+//+++++/+/+ssooooooosossyyo///+/``\n" +                    "                             .+oo++++//++++:::/+ossssooo+ooo+/::///-\n" +                    "                              `...`./+/+++++//:::///++++++//:::/+//.\n" +                    "                                    :++++++++/:////////::----::/++o`\n" +                    "                                    `/+++oooo+///::---..---:::/+os+`\n" +                    "                                     :++++oooooo++////////++++sso++.\n" +                    "                                   ` ./++++osssyyyssssssssyyyyo+++/.\n" +                    "                                   ```.+++++osssssoosossssssoo+++//``\n" +                    "                               ` ``````-o+++++ooo++/:://++ooo+++//-```\n" +                    "                             ``````..`.`-o+++++oo++/::/+++oo++///:`````\n" +                    "                           ``````.......`.+o+++ooo++///+++o++///:`````\n" +                    "                        `````````..``...```:+++ooo++++++++++////```````\n" +                    "                        `````````..``.`..````:+++o+++++++++///:` ``````  ````     ```\n" +                    "                         ```````````````.```.--/+++++///++/:/-`-``````   ````````````````\n" +                    "               ```````````````````````````./:----/+++++///::--//+.```     ````````````````````\n" +                    "           ```````````````````````  ````.:/:----..-+++/----::----/:``     ``````````````````````````\n" +                    "`      ```````````````````````````   `-::-----.-.--:+-.....--------::-.`  ``````````````````````````\n\u001B[0m");            System.out.println("\n\n");            System.out.println("Veselcic: You can't possibly defeat me!");            Thread.sleep(1000);            System.out.println("...");            Thread.sleep(1000);            System.out.println(".....");            Thread.sleep(1000);            System.out.println("Unless..");            Thread.sleep(1000);            System.out.println("You have a calculator!");            Thread.sleep(1000);            if (player.getBag().contains(calculator)) {                System.out.println("Wait.. you have one?!");                Thread.sleep(1000);                System.out.println("That's impossible..");                Thread.sleep(1000);                System.out.println("I was defeated by a simple Human..");                Thread.sleep(1000);                System.out.println("*Veselcic died*");                Thread.sleep(1000);                System.out.println("Thank you adventurer for saving our World!");                System.out.println("Credit: Gilles Russo, Elias Mehran");                boss.setHealth(0.0);            } else {                System.out.println("I knew it! You don't have one!");                Thread.sleep(1000);                System.out.println("Talks in demon:");                System.out.println("\t\033[3mDas eh das gehte doch nich, sowas mach mich RASEND\033[0m");                Thread.sleep(1000);                System.out.println("DIE HUMAN");                Thread.sleep(1000);                System.out.println("\u001B[41mYou DIED\u001B[0m");                System.exit(0);            }        } else {            if ("Shrek".equals(mob.getName())) {                System.out.println("\u001B[32m                                                                                                    \n" +                        "                             ````````````````                        `````````````````              \n" +                        "                            ```````...```````                        ````````..````````             \n" +                        "                            ```````...```````                        ````````..````````             \n" +                        "                            ```````...```````.--:::::-..`            ````````..````````             \n" +                        "                            ```````...``.-/oosssssssssoo+/:.`        ````````..````````             \n" +                        "                            ```````...:+osssssssssssssssssoo+/-`     ````````..````````             \n" +                        "                            ```````./ossoooooossssooossssssoooo+-`   ````````..```..```             \n" +                        "                `           `````.:osooooooooooossooosooooooossyyo-  ````````..`.+ss+-`             \n" +                        "              -/+/-         ````.+ossssssooossssssoooooossyyhhddddh/`````````..-syddys-             \n" +                        "             :ossss/`       ```.+syhhddhhhyysooooo++++oyhhhyyyyyyhdd/````````.:syhmdyss.            \n" +                        "            .ossssoyo.      ``.+yyyyssysssyyys++++++/ossysssssssyyyhh:`````.-oyyyhddssy/            \n" +                        "            :ossssoyyy/`    ``+ooo++++oooooosso++++oossyysssssssyyyhhy+-.-+syyyhhhhhyys.            \n" +                        "            `+ossyyyyyys+:.`./o+++++ooossssssssoo++osyyyyyyssssyyyyhhdyhdmddhyo+/::--.`             \n" +                        "              `..--:/+ssyysooo++++oooosssyyyyyssooosyhhhhsssyyyyyyhhddhydmmy/..````````             \n" +                        "                      `-+ssso++++oosssyhhhhhyyssooosyhhhyyoydddoyddhhddhhd/.`..````````             \n" +                        "                         -oo++++oohho+dNNmydhyssoooossyyso+hhdhsyhdhysyyyh-``..````````             \n" +                        "                          ++///++ossosddddhhssooooooosssssoooosssssoossyyyo``..````````             \n" +                        "                         .+/////++oossyyyssooo++oo+oooosyysso++++++ooosyyyy:`..````````             \n" +                        "                         //////////++ooooooooo+++o++ooosyhyyyyooooooossyyyhy...````````             \n" +                        "                        `+/////+++/+ooossosssooooooooosyhddhhhhsssssssyyyhhh/..````````             \n" +                        "                        ./////++++oosyyyyhdmmdhhyyhhhhddmmddhhhyyyhdhyyyhhhds..````````             \n" +                        "                        ./////+oosyhysooooossssyhhhddhhhhhyyyyssyyyyyysyyhhdh..````````             \n" +                        "                        -///++oshhysoooooo+++++o++++++++++++oosyyhhysyssyhhdh..````````             \n" +                        "                        :///++oysoooooooo++++++++++++//+++oosyyhddmhoyyooyhdh-.````````             \n" +                        "                        ://+++oo+oossssooooooooooooossyhhhdddddddmhhsshoosydd:.````````             \n" +                        "                        ://///++++oydmddddddddmdddddhhhhyyyhyhhhhyydhyhsosyhd:.````````             \n" +                        "                        ://////+++osyhhs++s/:os:-:+s//+oysyhydyssyhddhhssshdd-.````````             \n" +                        "                        //////++++ooossyyhmddmdsyyhmhdddmmdhyssyhhhdhdhyyyddh..````````             \n" +                        "                        :++/++++++oooooosssyhyddhhdh+oooyssosyyhhhhhhdhhhhdds..````````             \n" +                        "                        .++++++++oo+ooooooooooooooossossssyyyhhhhhhhhhhhdddh-..````````             \n" +                        "                         /o++++++oooooooooooooosssssssyyyyhhhhhhhhhhdhhdddh:`..````````             \n" +                        "                         `/ooooooooooooooosssssssyyyyyyyyhhhhhhhhhhhdhddds-``..````````             \n" +                        "                          `-osooooooooooossssssssysyyyyyyyyyhhhhhhhddddy/.```..````````             \n" +                        "                            ./osooooooooooooooooossssoooossssyyyhhhddy/.`````..````````             \n" +                        "                            ``./ssooooo++++++++++++++++++++oosyyhhhh/.```````..````````             \n" +                        "                            ````-+sssoo++++++++++++++++++oosyyhhhho. ````````..````````             \n" +                        "                            ``````-+sssoooooooooooooooosssyyhhhho-   ````````..````````             \n" +                        "                            ```````..:osssssssyyyyyyyyyyhhhhhy+-     ````````..````````             \n" +                        "                            ```````...`.:+syyhhhddhhhhhyys+:.`       ````````..````````             \n" +                        "                            ```````...``````.-----...```             ````````..````````             \n" +                        "                            ```````...```````                        ````````..````````             \n" +                        "                            ```````...```````                        \u001B[0m");            }            boolean playerTurn = true;            while (player.getHealth() > 0.0 && mob.getHealth() > 0.0) {                if (playerTurn) {                    System.out.println("\nIt's your turn Hero!");                    System.out.println("battle commands: attack, heal");                    Command command = parser.getCommand();                    processCombatCommand(command, mob);                    if (mob.getHealth() < 0.0) {                        mob.setHealth(0.0);                    }                    System.out.println(mob.getName() + ": " + mob.getHealth() + "/" + mob.getLvl() * 3.5 + "HP");                    playerTurn = false;                } else {                    System.out.println("\nIt's the enemy's turn!");                    int action = random.nextInt(5);                    if (action > 0) {                        mob.attack(player);                        if (player.getHealth() < 0.0) {                            player.setHealth(0.0);                        }                        System.out.println(player.getName() + ": " + player.getHealth() + "/" + player.getLvl() * 3.5 + "HP");                    } else {                        if (mob.getHealth() + mob.getLvl() > mob.getLvl() * 3.5) {                            mob.setHealth(mob.getLvl() * 3.5);                            System.out.println(mob.getName() + " healed himself to \u001B[32mfull HP!\u001B[0m");                        } else {                            mob.setHealth(mob.getLvl() + mob.getHealth());                            System.out.println(mob.getName() + " healed himself by \u001B[32m" + mob.getLvl() + "HP!\u001B[0m");                        }                        System.out.println(mob.getName() + ": " + mob.getHealth() + "/" + mob.getLvl() * 3.5 + "HP");                    }                    playerTurn = true;                }            }            if (player.getHealth() <= 0.0) {                System.out.println("\u001B[41mYou DIED\u001B[0m");                System.exit(0);            }            if (mob.getHealth() <= 0.0) {                player.setExp(player.getExp() + mob.getLvl() * 3);                System.out.println("You won!");                System.out.println("Gained \u001B[33mEXP: " + mob.getLvl() * 3 + "!\u001B[0m");                while (player.getExp() >= player.getLvl() * 3) {                    player.lvlUp();                }                System.out.println("\nRespawning mob...");                Thread.sleep(500);                System.out.println("Mob respawned");                mob.setHealth(mob.getLvl() * 3.5);            }        }    }    private void processCombatCommand(Command command, Entity enemy) {        if (command.isUnknown()) {            System.out.println("I don't know what you mean...");            return;        }        String commandWord = command.getCommandWord();        switch (commandWord) {            case "attack":                player.attack(enemy);                break;            case "heal":                heal();                break;            case "quit":                System.out.println("You can't quit during a fight coward!");                break;            case "run":                System.out.println("You wanted to run away but you are no coward");                break;            default:                System.out.println("I don't know what you mean...");                break;        }    }    private void heal() {        if (player.getBag().contains(potion)) {            player.setHealth(player.getLvl() * 3.5);            player.getBag().remove(potion);            System.out.println("Hero used a potion");            System.out.println("\u001B[32mHero: " + player.getHealth() + "/" + player.getLvl() * 3.5 + "\u001B[0m");        } else {            System.out.println("You don't have any potions");        }    }}